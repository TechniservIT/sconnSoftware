@model iotDash.Models.DeviceEditModel

@{
    ViewBag.Title = "Edit";
}
@{
    Layout = "~/Views/Shared/_DashboardLayout.cshtml";
}
    <div id="wrapper">
        <div class="row">
            <div id="addraz">
               @using (Html.BeginForm("Edit", "Device"))
               {
                    <fieldset>

                        <legend>Device</legend>

                        <div class="form-group">
                            @Html.HiddenFor(model => model.Device.Id)
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Device.DeviceName)
                            @Html.TextBoxFor(model => model.Device.DeviceName, new { @class = "form-control", @id = "devname" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Device.EndpInfo.Hostname)
                            @Html.TextBoxFor(model => model.Device.EndpInfo.Hostname, new { @class = "form-control" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Device.EndpInfo.Port)
                            @Html.TextBoxFor(model => model.Device.EndpInfo.Port, new { @class = "form-control" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Device.Credentials.Username)
                            @Html.TextBoxFor(model => model.Device.Credentials.Username, new { @class = "form-control" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Device.Credentials.Password)
                            @Html.TextBoxFor(model => model.Device.Credentials.Password, new { @class = "form-control" })
                        </div>

                        @if (Model.Locations != null)
                        {
                            <div class="form-group">
                                @Html.LabelFor(model => model.Device.DeviceLocation)
                                @Html.DropDownListFor(
                                model => model.LocationId,
                                 new SelectList(
                                   Model.Locations,
                                   "Id",
                                    "LocationName",
                                    Model.LocationId
                                    ),
                                  new { @class = "form-control" }
                                )
                            </div>
                        }
                        
                        @if (Model.Types != null)
                        {
                            <div class="form-group">
                                @Html.LabelFor(model => model.Device.Type, new { @class = "form-control" })
                                @Html.DropDownListFor(
                                    model => model.TypeId,
                                     new SelectList(
                                       Model.Types,
                                        "Id",
                                        "TypeName",
                                          Model.TypeId
                                        ),
                                      new { @class = "form-control" }
                                    )
                                </div>
                        }


                        <div class="form-group">
                            @Html.LabelFor(model => model.Device.IsVirtual)
                            @Html.EditorFor(model => model.Device.IsVirtual)
                        </div>


                        <div class="form-group">
                            <button class="btn btn-primary" type="submit">Add</button>
                        </div>

                    </fieldset>
                }
            </div>

        </div>

        <div class="row">
            <div id="resultview">
                @if (Model.Result != null)
                {
                    @Html.Raw(HttpUtility.HtmlDecode(Model.Result))
                }

            </div>
        </div>

    </div>
    <!-- /#wrapper -->
