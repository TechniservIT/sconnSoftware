@model iotDash.Areas.AlarmSystem.Models.AlarmSystemDeviceListModel
@using System.Globalization
@using sconnConnector
@using sconnConnector.POCO.Config.sconn

@{
    Layout = "~/Views/Shared/_DashboardLayout.cshtml";
}

@Scripts.Render("~/bundles/jqueryui")
@Scripts.Render("~/bundles/toggleswitch")
@Scripts.Render("~/bundles/signalr")
@Scripts.Render("~/bundles/numspin")
@Scripts.Render("~/bundles/fancybox")

@Styles.Render("~/bundles/css/toggleswitch")
@Styles.Render("~/bundles/css/numspin")

@{
    ViewBag.Title = "Index";
}

<script src="~/signalr/hubs"></script>

<script type="text/javascript">
    $(document).ready(function() {
        $(".fancybox").fancybox();
    });
</script>


@functions{
    public string GetImagePathForAlarmDeviceType(sconnDeviceType type)
    {
        if (type == sconnDeviceType.Motherboard)
        {
            return "/Content/img/strefa.png";
        }
        else if (type == sconnDeviceType.Graphical_Keypad)
        {
            return "/Content/img/strefy2.png";
        }
        else if (type == sconnDeviceType.Pir_Sensor)
        {
            return "/Content/img/eye.png";
        }
        else if (type == sconnDeviceType.Relay_Module)
        {
            return "/Content/img/przekaznik.png";
        }
        else
        {
            return "/Content/img/eye.png";
        }
    }

}


<script>

    var Reloading = false;



    function ReloadPanels() {

        Reloading = true;

        $(".panel").removeClass("panel-info");
        $(".panel").removeClass("panel-primary");

        $(".panel").each(function () {
            //apply class based on value
            var contval = $(this).find(".noderesval").first().attr("title");
            var pval = parseInt(contval);
            if (pval == 1) {
                $(this).addClass("panel-primary");
            } else {
                $(this).addClass("panel-info");
            }

            //set all result params
            $(this).find(".tgsw-action").each(function () {
                var IsSet = (pval == 1 ? true : false);
                var sw = $(this).bootstrapSwitch('state', IsSet);

            });

        });

        Reloading = false;
    }


    function syntaxHighlight(json) {
        json = json.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;');
        return json.replace(/("(\\u[a-zA-Z0-9]{4}|\\[^u]|[^\\"])*"(\s*:)?|\b(true|false|null)\b|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?)/g, function (match) {
            var cls = 'number';
            if (/^"/.test(match)) {
                if (/:$/.test(match)) {
                    cls = 'key';
                } else {
                    cls = 'string';
                }
            } else if (/true|false/.test(match)) {
                cls = 'boolean';
            } else if (/null/.test(match)) {
                cls = 'null';
            }
            return '<span class="' + cls + '">' + match + '</span>';
        });
    }

    var obj = { a: 1, 'b': 'foo', c: [false, 'false', null, 'null', { d: { e: 1.3e5, f: '1.3e5' } }] };

    $(function () {

        ReloadPanels();

        $('.spinEdit').spinedit({
            minimum: 50,
            maximum: 12500,
            step: 50,
            value: 150,
            numberOfDecimals: 0
        });



        $('.tgsw-action').on('switchChange.bootstrapSwitch', function () {

            if (!Reloading) {

                //get sender id
                var ElementId = $(this).attr("id");
                var AccessorId = "#".concat(ElementId);

                //TODO load req param input lists
                var StateToSet = $(this).bootstrapSwitch('state');
                //alert("req param :" + StateToSet);
                var ParamList = [StateToSet];

                //perform action
                $.ajax({
                    url: '@Url.Action("PerformAction", "Device")',
                    type: this.method,
                    data: {
                        ActionId: $(AccessorId).attr("title"),
                        ActionParams: ParamList
                    },
                    success: function (result) {
                        $('#resultview').html(result);
                    }
                });

            }


        });


        $('#actionselector a').click(function (e) {
            e.preventDefault()
            $(this).tab('show')
        })


    });

</script>



<div class="container-fluid">

<div class="row">
    <div class="panel panel-default">
        <div class="panel-heading">
            <center>
                <h2>Devices</h2>
            </center>
        </div>

        <div class="panel-body">

            @if (Model.Devices != null)
            {
                foreach (var item in Model.Devices)
                {
                    <div class="col-lg-3 col-sm-6 col-xs-10">

                        <div id="@item.Id" class="panel panel-info">

                            <div class="panel-heading">@item.Name</div>

                            <div class="panel-body">

                                <div class="col-lg-12 col-sm-12 col-xs-10">
                                    <div class="row">
                                        <div class="col-lg-4 col-sm-4 col-xs-12">
                                            <img src="@GetImagePathForAlarmDeviceType(item.Type)" class="thumbnail img-responsive">
                                        </div>
                                        <div class="col-lg-8 col-sm-8 col-xs-12">
                                            <div class="row">
                                               
                                            </div>
                                            <div class="row">
                                                Type : @item.Type.ToString()
                                            </div>

                                        </div>
                                    </div>

                                    <div class="row">
                                        <a href="@Url.Action("Status", "AlarmSystemDeviceConfig", new {ServerId = Model.ServerId, DeviceId = item.Id})" class="btn">
                                            <button class="btn btn-primary" type="button">
                                                <div class="inner-addon left-addon">
                                                    <i class="glyphicon glyphicon-log-in"></i>
                                                </div>
                                            </button>
                                        </a>

                                    </div>

                                </div>

                            </div>

                        </div>

                    </div>

                }
            }

        </div>
    </div>
</div>


</div>

